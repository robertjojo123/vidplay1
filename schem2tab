import nbtlib
import os

# Function to recursively print all keys and values in the NBT structure
def print_nbt_data(data, indent=0):
    """ Recursively print NBT data """
    # If data is a dictionary (tag with sub-tags)
    if isinstance(data, dict):
        for key, value in data.items():
            print("  " * indent + f"Key: {key}")
            print_nbt_data(value, indent + 1)
    # If data is a list (array of tags)
    elif isinstance(data, list):
        for index, value in enumerate(data):
            print("  " * indent + f"Index {index}")
            print_nbt_data(value, indent + 1)
    # If data is a basic value type (string, int, etc.)
    else:
        print("  " * indent + f"Value: {data}")

# Load the schematic file and print its structure
def load_schematic(filename):
    try:
        # Check if file exists
        if not os.path.isfile(filename):
            raise FileNotFoundError(f"The file '{filename}' was not found.")
        
        # Load the .schematic file using nbtlib
        schematic_data = nbtlib.load(filename)
        
        # Print the full NBT structure to debug
        print("Full NBT structure:")
        print_nbt_data(schematic_data)
        
        return schematic_data
    except Exception as e:
        print(f"Error loading schematic: {e}")
        return None

# Main function to load and inspect the schematic
def main():
    # Prompt the user for the schematic file path
    schematic_file = input("Enter the path to the schematic file (e.g., 'schematic.schematic'): ").strip()
    
    schematic_data = load_schematic(schematic_file)
    if schematic_data:
        print("Schematic inspection complete.")
    else:
        print("Failed to load schematic data.")

if __name__ == "__main__":
    main()
