import nbtlib
import os

# Function to get block name from block ID (you may need to extend this list)
def get_block_name(block_id):
    block_names = {
        1: "stone", 2: "grass", 3: "dirt", 4: "cobblestone",
        5: "planks", 6: "sapling", 7: "bedrock", 8: "water",
        9: "lava", 10: "sand", 11: "gravel", 12: "gold_ore",
        13: "iron_ore", 14: "coal_ore", 15: "wood", 16: "leaves",
        17: "wooden_planks", 18: "wool", 19: "saplings", 20: "wooden_door",
        # Add more block types as needed
    }
    return block_names.get(block_id, "unknown")

# Load the schematic file using nbtlib
def load_schematic(filename):
    try:
        # Check if file exists
        if not os.path.isfile(filename):
            raise FileNotFoundError(f"The file '{filename}' was not found.")
        
        # Load the .schematic file using nbtlib
        schematic_data = nbtlib.load(filename)
        
        blocks = []
        
        # Extract block data
        block_data = schematic_data['BlockData'].value
        width = schematic_data['Width'].value
        height = schematic_data['Height'].value
        length = schematic_data['Length'].value
        
        # Iterate over all blocks in the schematic
        for x in range(width):
            for y in range(height):
                for z in range(length):
                    index = x + (y * width) + (z * width * height)
                    block_id = block_data[index]
                    if block_id != 0:  # Only include non-air blocks
                        block_name = get_block_name(block_id)  # Map block ID to name
                        blocks.append({
                            'x': x,
                            'y': y,
                            'z': z,
                            'block': block_name
                        })

        return blocks
    except Exception as e:
        print(f"Error loading schematic: {e}")
        return None

# Convert the schematic data into a Lua table format
def convert_to_lua(blocks):
    lua_table = "local schematic = {\n"
    for block in blocks:
        lua_table += f"    {{x={block['x']}, y={block['y']}, z={block['z']}, block='{block['block']}'}}},\n"
    lua_table += "}\n"
    return lua_table

# Save the Lua table to a file
def save_lua_file(lua_code, filename="schematic.lua"):
    try:
        with open(filename, 'w') as file:
            file.write(lua_code)
        print(f"Lua file saved as {filename}")
    except Exception as e:
        print(f"Error saving Lua file: {e}")

# Main function to load, convert, and save
def main():
    # Prompt the user for the schematic file path
    schematic_file = input("Enter the path to the schematic file (e.g., 'schematic.schematic'): ").strip()
    
    blocks = load_schematic(schematic_file)
    if blocks is not None:
        lua_code = convert_to_lua(blocks)
        save_lua_file(lua_code)
    else:
        print("No valid schematic data to convert.")

if __name__ == "__main__":
    main()
